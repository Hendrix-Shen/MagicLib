name: CI
on:
  push:
    branches:
      - 'dev/**'
      - 'exp/**'
    paths:
      - "**.gradle"
      - "gradle.properties"
      - "src/**"
      - "versions/**"
      - ".github/**"
  release:
    types:
      - published
  pull_request:

jobs:
  build:
    if: ${{ github.event_name == 'push' && !startsWith(github.event.ref, 'refs/tags/') && contains(github.event.head_commit.message, '[build skip]') == false }}
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ./.gradle/loom-caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}

      - name: Get short commit sha
        id: get_short_sha
        run: |
          short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT

      - name: Get commit count
        id: get_commit_count
        run: |
          commit_count=$(git log | grep -e '^commit [a-zA-Z0-9]*' | wc -l)
          echo "commit_count=$commit_count" >> $GITHUB_OUTPUT

      - name: Read Properties mod info
        id: mod_info
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: 'mod_name mod_version'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Preprocess sources
        env:
          BUILD_TYPE: "BETA"
        run: ./gradlew preprocessResources --stacktrace

      - name: Publish Maven with Gradle
        env:
          BUILD_TYPE: "BETA"
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          SIGNING_PGP_KEY: ${{ secrets.SIGNING_PGP_KEY }}
        run: ./gradlew build publish -x test --stacktrace

      - name: Upload assets to GitHub Action
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.mod_info.outputs.mod_name }} ${{ steps.mod_info.outputs.mod_version }}.${{ steps.get_commit_count.outputs.commit_count }}+${{ steps.get_short_sha.outputs.short_sha }}
          path: |
            LICENSE
            fabricWrapper/build/libs/*.jar
            fabricWrapper/build/tmp/submods/META-INF/jars/*.jar

      - name: Create Github release
        if: contains(github.event.head_commit.message, '[publish skip]') == false && contains(github.event.ref, 'refs/heads/exp') == false
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            LICENSE
            fabricWrapper/build/libs/*.jar
            fabricWrapper/build/tmp/submods/META-INF/jars/*.jar
          name: "[CI#${{ github.run_number }}]${{ steps.mod_info.outputs.mod_name }} ${{ steps.mod_info.outputs.mod_version }}.${{ steps.get_commit_count.outputs.commit_count }}+${{ steps.get_short_sha.outputs.short_sha }}"
          tag_name: "${{ github.ref_name }}.${{ steps.get_commit_count.outputs.commit_count }}"
          target_commitish: ${{ github.event.ref }}
          generate_release_notes: true

  publish:
    if: ${{ github.event_name == 'release' }}
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ./.gradle/loom-caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle', 'gradle.properties', '**/*.accesswidener') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Get short commit sha
        id: get_short_sha
        run: |
          short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT

      - name: Get commit count
        id: get_commit_count
        run: |
          commit_count=$(git log | grep -e '^commit [a-zA-Z0-9]*' | wc -l)
          echo "commit_count=$commit_count" >> $GITHUB_OUTPUT

      - name: Read Properties mod info
        id: mod_info
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: 'mod_name mod_version'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Preprocess sources
        env:
          BUILD_TYPE: "RELEASE"
        run: ./gradlew preprocessResources --stacktrace

      - name: Publish Maven with Gradle
        env:
          BUILD_TYPE: "RELEASE"
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          SIGNING_PGP_KEY: ${{ secrets.SIGNING_PGP_KEY }}
        run: ./gradlew build publish -x test --stacktrace

      - name: Upload assets to GitHub Action
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.mod_info.outputs.mod_name }} ${{ steps.mod_info.outputs.mod_version }}.${{ steps.get_commit_count.outputs.commit_count }}+${{ steps.get_short_sha.outputs.short_sha }}
          path: |
            LICENSE
            fabricWrapper/build/libs/*.jar
            fabricWrapper/build/tmp/submods/META-INF/jars/*.jar

      - name: Upload assets Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.ref }}
          files: |
            LICENSE
            fabricWrapper/build/libs/*.jar
            fabricWrapper/build/tmp/submods/META-INF/jars/*.jar

      - name: Publish release to CurseForge & Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: mv1zH6ln
          modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}
          curseforge-id: 576459
          curseforge-token: ${{ secrets.CF_API_TOKEN }}
          files: |
            fabricWrapper/build/libs/!(*-@(dev|sources|javadoc)).jar
            fabricWrapper/build/tmp/submods/META-INF/jars/!(*-@(dev|sources)).jar
          name: 'MagicLib ${{ steps.mod_info.outputs.mod_version }}.${{ steps.get_commit_count.outputs.commit_count }}'
          version: ${{ steps.mod_info.outputs.mod_version }}.${{ steps.get_commit_count.outputs.commit_count }}
          version-type: 'release'
          changelog: ${{ github.event.release.body }}
          loaders: |
            fabric
            quilt
          game-versions: |
            1.14.4
            1.15.2
            1.16.5
            1.17.1
            1.18.2
            1.19.2
            1.19.3
            1.19.4
            1.20.1
          game-version-filter: any
          java: |
            8
            9
            10
            11
            12
            13
            14
            15
            16
            17
            18
          dependencies: |
            carpet(optional)
            malilib(optional)
          retry-attempts: 2
          retry-delay: 10000

  pull_request:
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Preprocess sources
        run: ./gradlew preprocessResources --stacktrace

      - name: Build with Gradle
        run: ./gradlew build --stacktrace
